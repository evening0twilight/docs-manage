name: 多云环境部署
on:
  # push:
  #   branches: [ master ]
  #   tags: [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
      
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 登录到 GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 提取元数据
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: 构建并推送 Docker 镜像
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 输出镜像信息
      id: image
      run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT

  deploy-aliyun:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: aliyun-production
    
    steps:
    - name: 部署到阿里云
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USER }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT }}
        script: |
          cd /home/deploy/docs-manage
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ${{ needs.build.outputs.image }}
          docker-compose down
          docker-compose up -d
          docker system prune -f

  deploy-tencent:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: tencent-production
    
    steps:
    - name: 部署到腾讯云
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.TENCENT_HOST }}
        username: ${{ secrets.TENCENT_USER }}
        key: ${{ secrets.TENCENT_SSH_KEY }}
        port: ${{ secrets.TENCENT_PORT }}
        script: |
          cd /home/deploy/docs-manage
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ${{ needs.build.outputs.image }}
          docker-compose down
          docker-compose up -d
          docker system prune -f

  deploy-digitalocean:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev-pzj'
    environment: digitalocean-staging
    
    steps:
    - name: 部署到 DigitalOcean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USER }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT }}
        script: |
          cd /home/deploy/docs-manage
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ${{ needs.build.outputs.image }}
          docker-compose down
          docker-compose up -d
          docker system prune -f